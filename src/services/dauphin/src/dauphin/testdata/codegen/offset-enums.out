enum etest {
    X: boolean,
    Y: bytes
};

enum etest2 {
    A: etest,
    B: vec(etest)
};

struct stest {
    M: vec(etest2),
    N: etest
};

+ offset_enums::stest:M<1>
+ offset_enums::stest:M.offset_enums::etest2:A<1>
+ offset_enums::stest:M.offset_enums::etest2:A.offset_enums::etest:X<1>
+ offset_enums::stest:M.offset_enums::etest2:A.offset_enums::etest:Y<1>
+ offset_enums::stest:M.offset_enums::etest2:B<2>
+ offset_enums::stest:M.offset_enums::etest2:B.offset_enums::etest:X<2>
+ offset_enums::stest:M.offset_enums::etest2:B.offset_enums::etest:Y<2>
+ offset_enums::stest:N<0>
+ offset_enums::stest:N.offset_enums::etest:X<0>
+ offset_enums::stest:N.offset_enums::etest:Y<0>/R
