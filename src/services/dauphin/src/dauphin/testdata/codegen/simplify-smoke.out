#alias %2 %1;
#number %3 1;
#call:assign:number/L:number/R %2 %3;
#alias %246 %244;
#alias %475 %472;
#alias %476 %473;
#alias %477 %474;
#nil %6;
#number %7 1;
#append %6 %7;
#number %8 2;
#append %6 %8;
#number %9 3;
#append %6 %9;
#star %10 %6;
#bool %11 true;
#string %299 "";
#number %298 1;
#copy %300 %11;
#copy %248 %10;
#copy %478 %298;
#copy %479 %299;
#copy %480 %300;
#call:assign:stest/L:stest/R %246 %475 %476 %477 %248 %478 %479 %480;
#alias %15 %14;
#copy %250 %244;
#copy %481 %472;
#copy %482 %473;
#copy %483 %474;
#copy %301 %481;
#copy %302 %482;
#copy %303 %483;
#number %553 1;
#numeq %554 %301 %553;
#filter %18 %303 %554;
#call:assign:boolean/L:boolean/R %15 %18;
#alias %252 %244;
#alias %484 %472;
#alias %485 %473;
#alias %486 %474;
#copy %20 %252;
#copy %21 %244;
#nil %22;
#star %23 %22;
#call:assign:vec(number)/L:vec(number)/R %20 %23;
#alias %25 %24;
#copy %254 %244;
#copy %487 %472;
#copy %488 %473;
#copy %489 %474;
#copy %27 %254;
#call:assign:vec(number)/L:vec(number)/R %25 %27;
#alias %258 %256;
#alias %493 %490;
#alias %494 %491;
#alias %495 %492;
#copy %260 %244;
#copy %496 %472;
#copy %497 %473;
#copy %498 %474;
#call:oper_test:stest/R:stest/R %262 %499 %500 %501 %260 %496 %497 %498;
#call:assign:stest/L:stest/R %258 %493 %494 %495 %262 %499 %500 %501;
#alias %266 %264;
#alias %505 %502;
#alias %506 %503;
#alias %507 %504;
#nil %268;
#nil %508;
#nil %509;
#nil %510;
#nil %35;
#number %36 1;
#append %35 %36;
#number %37 2;
#append %35 %37;
#number %38 3;
#append %35 %38;
#star %39 %35;
#bool %40 true;
#string %305 "";
#number %304 1;
#copy %306 %40;
#copy %270 %39;
#copy %511 %304;
#copy %512 %305;
#copy %513 %306;
#append %268 %270;
#append %508 %511;
#append %509 %512;
#append %510 %513;
#nil %43;
#number %44 4;
#append %43 %44;
#number %45 5;
#append %43 %45;
#number %46 6;
#append %43 %46;
#star %47 %43;
#bool %48 false;
#string %308 "";
#number %307 1;
#copy %309 %48;
#copy %272 %47;
#copy %514 %307;
#copy %515 %308;
#copy %516 %309;
#append %268 %272;
#append %508 %514;
#append %509 %515;
#append %510 %516;
#star %274 %268;
#star %517 %508;
#star %518 %509;
#star %519 %510;
#call:assign:vec(stest)/L:vec(stest)/R %266 %505 %506 %507 %274 %517 %518 %519;
#alias %191 %186;
#alias %282 %280;
#alias %529 %526;
#alias %530 %527;
#alias %531 %528;
#alias %442 %439;
#alias %443 %440;
#alias %444 %441;
#alias %194 %189;
#alias %195 %190;
#bool %54 true;
#list %231;
#string %233 "";
#number %466 0;
#copy %467 %233;
#bool %468 false;
#copy %284 %231;
#copy %532 %466;
#copy %533 %467;
#copy %534 %468;
#string %234 "";
#number %445 0;
#copy %446 %234;
#bool %447 false;
#number %196 2;
#copy %199 %54;
#list %200;
#call:assign:etest3/L:etest3/R %191 %282 %529 %530 %531 %442 %443 %444 %194 %195 %196 %284 %532 %533 %534 %445 %446 %447 %199 %200;
#alias %57 %56;
#copy %201 %186;
#copy %286 %280;
#copy %535 %526;
#copy %536 %527;
#copy %537 %528;
#copy %448 %439;
#copy %449 %440;
#copy %450 %441;
#copy %204 %189;
#copy %205 %190;
#number %235 2;
#numeq %236 %201 %235;
#filter %59 %204 %236;
#call:assign:boolean/L:boolean/R %57 %59;
#alias %61 %60;
#copy %206 %186;
#copy %288 %280;
#copy %538 %526;
#copy %539 %527;
#copy %540 %528;
#copy %451 %439;
#copy %452 %440;
#copy %453 %441;
#copy %209 %189;
#copy %210 %190;
#number %237 0;
#numeq %63 %206 %237;
#call:assign:boolean/L:boolean/R %61 %63;
#alias %313 %310;
#alias %314 %311;
#alias %315 %312;
#nil %316;
#nil %317;
#nil %318;
#bool %67 true;
#string %320 "";
#number %319 1;
#copy %321 %67;
#append %316 %319;
#append %317 %320;
#append %318 %321;
#bool %69 false;
#string %323 "";
#number %322 1;
#copy %324 %69;
#append %316 %322;
#append %317 %323;
#append %318 %324;
#string %71 "hi";
#number %325 0;
#copy %326 %71;
#bool %327 false;
#append %316 %325;
#append %317 %326;
#append %318 %327;
#star %328 %316;
#star %329 %317;
#star %330 %318;
#call:assign:vec(etest)/L:vec(etest)/R %313 %314 %315 %328 %329 %330;
#alias %75 %74;
#copy %331 %310;
#copy %332 %311;
#copy %333 %312;
#square %334 %331;
#square %335 %332;
#square %336 %333;
#number %555 1;
#numeq %78 %334 %555;
#call:assign:boolean/L:boolean/R %75 %78;
#alias %340 %337;
#alias %341 %338;
#alias %342 %339;
#copy %343 %310;
#copy %344 %311;
#copy %345 %312;
#at %82 %343;
#square %346 %343;
#square %347 %344;
#square %348 %345;
#copy %349 %346;
#copy %350 %347;
#copy %351 %348;
#number %556 1;
#numeq %85 %349 %556;
#filter %352 %346 %85;
#filter %353 %347 %85;
#filter %354 %348 %85;
#star %355 %352;
#star %356 %353;
#star %357 %354;
#call:assign:vec(etest)/L:vec(etest)/R %340 %341 %342 %355 %356 %357;
#alias %361 %358;
#alias %362 %359;
#alias %363 %360;
#copy %364 %310;
#copy %365 %311;
#copy %366 %312;
#at %91 %364;
#square %367 %364;
#square %368 %365;
#square %369 %366;
#copy %93 %91;
#number %94 0;
#call:eq:boolean/R:number/R:number/R %95 %93 %94;
#filter %370 %367 %95;
#filter %371 %368 %95;
#filter %372 %369 %95;
#call:assign:etest/L:etest/R %361 %362 %363 %370 %371 %372;
#alias %216 %211;
#alias %292 %290;
#alias %544 %541;
#alias %545 %542;
#alias %546 %543;
#alias %457 %454;
#alias %458 %455;
#alias %459 %456;
#alias %219 %214;
#alias %220 %215;
#nil %99;
#nil %100;
#number %101 1;
#append %100 %101;
#number %102 2;
#append %100 %102;
#star %103 %100;
#append %99 %103;
#nil %104;
#number %105 3;
#append %104 %105;
#star %106 %104;
#append %99 %106;
#nil %107;
#star %108 %107;
#append %99 %108;
#star %109 %99;
#list %238;
#string %240 "";
#number %469 0;
#copy %470 %240;
#bool %471 false;
#copy %294 %238;
#copy %547 %469;
#copy %548 %470;
#copy %549 %471;
#string %241 "";
#number %460 0;
#copy %461 %241;
#bool %462 false;
#bool %224 false;
#number %221 3;
#copy %225 %109;
#call:assign:etest3/L:etest3/R %216 %292 %544 %545 %546 %457 %458 %459 %219 %220 %221 %294 %547 %548 %549 %460 %461 %462 %224 %225;
#alias %112 %111;
#copy %226 %211;
#copy %296 %290;
#copy %550 %541;
#copy %551 %542;
#copy %552 %543;
#copy %463 %454;
#copy %464 %455;
#copy %465 %456;
#copy %229 %214;
#copy %230 %215;
#number %242 3;
#numeq %243 %226 %242;
#filter %114 %230 %243;
#square %115 %114;
#call:assign:vec(number)/L:vec(number)/R %112 %115;
#alias %373 %310;
#alias %374 %311;
#alias %375 %312;
#refsquare %376 %373;
#refsquare %377 %374;
#refsquare %378 %375;
#square %379 %310;
#square %380 %311;
#square %381 %312;
#filtersquare %119 %310;
#at %120 %310;
#copy %121 %120;
#number %122 0;
#call:eq:boolean/R:number/R:number/R %123 %121 %122;
#filter %124 %119 %123;
#filter %382 %379 %123;
#filter %383 %380 %123;
#filter %384 %381 %123;
#string %126 "lo";
#number %385 0;
#copy %386 %126;
#bool %387 false;
#call:assign:number/F:etest/L:etest/R %124 %376 %377 %378 %385 %386 %387;
#alias %388 %310;
#alias %389 %311;
#alias %390 %312;
#refsquare %391 %388;
#refsquare %392 %389;
#refsquare %393 %390;
#square %394 %310;
#square %395 %311;
#square %396 %312;
#filtersquare %131 %310;
#number %557 0;
#numeq %558 %391 %557;
#filter %132 %392 %558;
#number %559 0;
#numeq %560 %394 %559;
#filter %133 %395 %560;
#string %134 "boo";
#call:assign:number/F:string/L:string/R %131 %132 %134;
#alias %400 %397;
#alias %401 %398;
#alias %402 %399;
#bool %137 true;
#string %404 "";
#number %403 1;
#copy %405 %137;
#call:assign:etest/L:etest/R %400 %401 %402 %403 %404 %405;
#alias %406 %397;
#alias %407 %398;
#alias %408 %399;
#number %561 1;
#numeq %562 %406 %561;
#filter %140 %408 %562;
#number %563 1;
#numeq %564 %397 %563;
#filter %141 %399 %564;
#bool %142 false;
#call:assign:boolean/L:boolean/R %140 %142;
#alias %412 %409;
#alias %413 %410;
#alias %414 %411;
#nil %415;
#nil %416;
#nil %417;
#bool %146 true;
#string %419 "";
#number %418 1;
#copy %420 %146;
#append %415 %418;
#append %416 %419;
#append %417 %420;
#bool %148 false;
#string %422 "";
#number %421 1;
#copy %423 %148;
#append %415 %421;
#append %416 %422;
#append %417 %423;
#string %150 "hi";
#number %424 0;
#copy %425 %150;
#bool %426 false;
#append %415 %424;
#append %416 %425;
#append %417 %426;
#star %427 %415;
#star %428 %416;
#star %429 %417;
#call:assign:vec(etest)/L:vec(etest)/R %412 %413 %414 %427 %428 %429;
#alias %430 %409;
#alias %431 %410;
#alias %432 %411;
#refsquare %433 %430;
#refsquare %434 %431;
#refsquare %435 %432;
#square %436 %409;
#square %437 %410;
#square %438 %411;
#filtersquare %156 %409;
#number %565 1;
#numeq %566 %433 %565;
#filter %157 %435 %566;
#number %567 1;
#numeq %568 %436 %567;
#filter %158 %438 %568;
#bool %159 false;
#call:assign:number/F:boolean/L:boolean/R %156 %157 %159;
#alias %276 %244;
#alias %520 %472;
#alias %521 %473;
#alias %522 %474;
#copy %161 %276;
#copy %162 %244;
#nil %163;
#number %164 1;
#append %163 %164;
#number %165 2;
#append %163 %165;
#number %166 3;
#append %163 %166;
#star %167 %163;
#call:assign:vec(number)/L:vec(number)/R %161 %167;
#alias %278 %244;
#alias %523 %472;
#alias %524 %473;
#alias %525 %474;
#copy %169 %278;
#copy %170 %244;
#refsquare %171 %169;
#square %172 %170;
#filtersquare %173 %170;
#at %174 %170;
#copy %175 %172;
#number %176 1;
#call:gt:boolean/R:number/R:number/R %177 %175 %176;
#filter %178 %173 %177;
#filter %179 %172 %177;
#copy %180 %179;
#number %181 3;
#call:lt:boolean/R:number/R:number/R %182 %180 %181;
#filter %183 %178 %182;
#filter %184 %179 %182;
#number %185 5;
#call:assign:number/F:number/L:number/R %183 %171 %185;
