#alias %2 %1;
#number %3 1;
#call:assign/i:number/L:number/R %2 %3;
#alias %247 %245;
#alias %476 %473;
#alias %477 %474;
#alias %478 %475;
#nil %6;
#number %7 1;
#append %6 %7;
#number %8 2;
#append %6 %8;
#number %9 3;
#append %6 %9;
#star %10 %6;
#bool %11 true;
#string %300 "";
#number %299 1;
#copy %301 %11;
#copy %249 %10;
#copy %479 %299;
#copy %480 %300;
#copy %481 %301;
#call:assign/i:stest/L:stest/R %247 %476 %477 %478 %249 %479 %480 %481;
#alias %15 %14;
#copy %251 %245;
#copy %482 %473;
#copy %483 %474;
#copy %484 %475;
#copy %302 %482;
#copy %303 %483;
#copy %304 %484;
#number %554 1;
#numeq %302 %554;
#filter %18 %304 %555;
#call:assign/i:boolean/L:boolean/R %15 %18;
#alias %253 %245;
#alias %485 %473;
#alias %486 %474;
#alias %487 %475;
#copy %20 %253;
#copy %21 %245;
#nil %22;
#star %23 %22;
#call:assign/i:vec(number)/L:vec(number)/R %20 %23;
#alias %25 %24;
#copy %255 %245;
#copy %488 %473;
#copy %489 %474;
#copy %490 %475;
#copy %27 %255;
#call:assign/i:vec(number)/L:vec(number)/R %25 %27;
#alias %259 %257;
#alias %494 %491;
#alias %495 %492;
#alias %496 %493;
#copy %261 %245;
#copy %497 %473;
#copy %498 %474;
#copy %499 %475;
#call:oper_test:stest/R:stest/R %263 %500 %501 %502 %261 %497 %498 %499;
#call:assign/i:stest/L:stest/R %259 %494 %495 %496 %263 %500 %501 %502;
#alias %267 %265;
#alias %506 %503;
#alias %507 %504;
#alias %508 %505;
#nil %269;
#nil %509;
#nil %510;
#nil %511;
#nil %35;
#number %36 1;
#append %35 %36;
#number %37 2;
#append %35 %37;
#number %38 3;
#append %35 %38;
#star %39 %35;
#bool %40 true;
#string %306 "";
#number %305 1;
#copy %307 %40;
#copy %271 %39;
#copy %512 %305;
#copy %513 %306;
#copy %514 %307;
#append %269 %271;
#append %509 %512;
#append %510 %513;
#append %511 %514;
#nil %43;
#number %44 4;
#append %43 %44;
#number %45 5;
#append %43 %45;
#number %46 6;
#append %43 %46;
#star %47 %43;
#bool %48 false;
#string %309 "";
#number %308 1;
#copy %310 %48;
#copy %273 %47;
#copy %515 %308;
#copy %516 %309;
#copy %517 %310;
#append %269 %273;
#append %509 %515;
#append %510 %516;
#append %511 %517;
#star %275 %269;
#star %518 %509;
#star %519 %510;
#star %520 %511;
#call:assign/i:vec(stest)/L:vec(stest)/R %267 %506 %507 %508 %275 %518 %519 %520;
#alias %191 %186;
#alias %283 %281;
#alias %530 %527;
#alias %531 %528;
#alias %532 %529;
#alias %443 %440;
#alias %444 %441;
#alias %445 %442;
#alias %194 %189;
#alias %195 %190;
#bool %54 true;
#list %231;
#string %233 "";
#number %467 0;
#copy %468 %233;
#bool %469 false;
#copy %285 %231;
#copy %533 %467;
#copy %534 %468;
#copy %535 %469;
#string %234 "";
#number %446 0;
#copy %447 %234;
#bool %448 false;
#number %196 2;
#copy %199 %54;
#list %200;
#call:assign/i:etest3/L:etest3/R %191 %283 %530 %531 %532 %443 %444 %445 %194 %195 %196 %285 %533 %534 %535 %446 %447 %448 %199 %200;
#alias %57 %56;
#copy %201 %186;
#copy %287 %281;
#copy %536 %527;
#copy %537 %528;
#copy %538 %529;
#copy %449 %440;
#copy %450 %441;
#copy %451 %442;
#copy %204 %189;
#copy %205 %190;
#number %235 2;
#numeq %201 %235;
#filter %59 %204 %236;
#call:assign/i:boolean/L:boolean/R %57 %59;
#alias %61 %60;
#copy %206 %186;
#copy %289 %281;
#copy %539 %527;
#copy %540 %528;
#copy %541 %529;
#copy %452 %440;
#copy %453 %441;
#copy %454 %442;
#copy %209 %189;
#copy %210 %190;
#number %238 %237 0;
#numeq %63 %206 %237;
#call:assign/i:boolean/L:boolean/R %61 %63;
#alias %314 %311;
#alias %315 %312;
#alias %316 %313;
#nil %317;
#nil %318;
#nil %319;
#bool %67 true;
#string %321 "";
#number %320 1;
#copy %322 %67;
#append %317 %320;
#append %318 %321;
#append %319 %322;
#bool %69 false;
#string %324 "";
#number %323 1;
#copy %325 %69;
#append %317 %323;
#append %318 %324;
#append %319 %325;
#string %71 "hi";
#number %326 0;
#copy %327 %71;
#bool %328 false;
#append %317 %326;
#append %318 %327;
#append %319 %328;
#star %329 %317;
#star %330 %318;
#star %331 %319;
#call:assign/i:vec(etest)/L:vec(etest)/R %314 %315 %316 %329 %330 %331;
#alias %75 %74;
#copy %332 %311;
#copy %333 %312;
#copy %334 %313;
#square %335 %332;
#square %336 %333;
#square %337 %334;
#number %557 %556 1;
#numeq %78 %335 %556;
#call:assign/i:boolean/L:boolean/R %75 %78;
#alias %341 %338;
#alias %342 %339;
#alias %343 %340;
#copy %344 %311;
#copy %345 %312;
#copy %346 %313;
#at %82 %344;
#square %347 %344;
#square %348 %345;
#square %349 %346;
#copy %350 %347;
#copy %351 %348;
#copy %352 %349;
#number %559 %558 1;
#numeq %85 %350 %558;
#filter %353 %347 %85;
#filter %354 %348 %85;
#filter %355 %349 %85;
#star %356 %353;
#star %357 %354;
#star %358 %355;
#call:assign/i:vec(etest)/L:vec(etest)/R %341 %342 %343 %356 %357 %358;
#alias %362 %359;
#alias %363 %360;
#alias %364 %361;
#copy %365 %311;
#copy %366 %312;
#copy %367 %313;
#at %91 %365;
#square %368 %365;
#square %369 %366;
#square %370 %367;
#copy %93 %91;
#number %94 0;
#call:eq:boolean/R:number/R:number/R %95 %93 %94;
#filter %371 %368 %95;
#filter %372 %369 %95;
#filter %373 %370 %95;
#call:assign/i:etest/L:etest/R %362 %363 %364 %371 %372 %373;
#alias %216 %211;
#alias %293 %291;
#alias %545 %542;
#alias %546 %543;
#alias %547 %544;
#alias %458 %455;
#alias %459 %456;
#alias %460 %457;
#alias %219 %214;
#alias %220 %215;
#nil %99;
#nil %100;
#number %101 1;
#append %100 %101;
#number %102 2;
#append %100 %102;
#star %103 %100;
#append %99 %103;
#nil %104;
#number %105 3;
#append %104 %105;
#star %106 %104;
#append %99 %106;
#nil %107;
#star %108 %107;
#append %99 %108;
#star %109 %99;
#list %239;
#string %241 "";
#number %470 0;
#copy %471 %241;
#bool %472 false;
#copy %295 %239;
#copy %548 %470;
#copy %549 %471;
#copy %550 %472;
#string %242 "";
#number %461 0;
#copy %462 %242;
#bool %463 false;
#bool %224 false;
#number %221 3;
#copy %225 %109;
#call:assign/i:etest3/L:etest3/R %216 %293 %545 %546 %547 %458 %459 %460 %219 %220 %221 %295 %548 %549 %550 %461 %462 %463 %224 %225;
#alias %112 %111;
#copy %226 %211;
#copy %297 %291;
#copy %551 %542;
#copy %552 %543;
#copy %553 %544;
#copy %464 %455;
#copy %465 %456;
#copy %466 %457;
#copy %229 %214;
#copy %230 %215;
#number %243 3;
#numeq %226 %243;
#filter %114 %230 %244;
#square %115 %114;
#call:assign/i:vec(number)/L:vec(number)/R %112 %115;
#alias %374 %311;
#alias %375 %312;
#alias %376 %313;
#refsquare %377 %374;
#refsquare %378 %375;
#refsquare %379 %376;
#square %380 %311;
#square %381 %312;
#square %382 %313;
#filtersquare %119 %311;
#at %120 %311;
#copy %121 %120;
#number %122 0;
#call:eq:boolean/R:number/R:number/R %123 %121 %122;
#filter %124 %119 %123;
#filter %383 %380 %123;
#filter %384 %381 %123;
#filter %385 %382 %123;
#string %126 "lo";
#number %386 0;
#copy %387 %126;
#bool %388 false;
#call:assign/i:number/F:etest/L:etest/R %124 %377 %378 %379 %386 %387 %388;
#alias %389 %311;
#alias %390 %312;
#alias %391 %313;
#refsquare %392 %389;
#refsquare %393 %390;
#refsquare %394 %391;
#square %395 %311;
#square %396 %312;
#square %397 %313;
#filtersquare %131 %311;
#number %560 0;
#numeq %392 %560;
#filter %132 %393 %561;
#number %562 0;
#numeq %395 %562;
#filter %133 %396 %563;
#string %134 "boo";
#call:assign/i:number/F:string/L:string/R %131 %132 %134;
#alias %401 %398;
#alias %402 %399;
#alias %403 %400;
#bool %137 true;
#string %405 "";
#number %404 1;
#copy %406 %137;
#call:assign/i:etest/L:etest/R %401 %402 %403 %404 %405 %406;
#alias %407 %398;
#alias %408 %399;
#alias %409 %400;
#number %564 1;
#numeq %407 %564;
#filter %140 %409 %565;
#number %566 1;
#numeq %398 %566;
#filter %141 %400 %567;
#bool %142 false;
#call:assign/i:boolean/L:boolean/R %140 %142;
#alias %413 %410;
#alias %414 %411;
#alias %415 %412;
#nil %416;
#nil %417;
#nil %418;
#bool %146 true;
#string %420 "";
#number %419 1;
#copy %421 %146;
#append %416 %419;
#append %417 %420;
#append %418 %421;
#bool %148 false;
#string %423 "";
#number %422 1;
#copy %424 %148;
#append %416 %422;
#append %417 %423;
#append %418 %424;
#string %150 "hi";
#number %425 0;
#copy %426 %150;
#bool %427 false;
#append %416 %425;
#append %417 %426;
#append %418 %427;
#star %428 %416;
#star %429 %417;
#star %430 %418;
#call:assign/i:vec(etest)/L:vec(etest)/R %413 %414 %415 %428 %429 %430;
#alias %431 %410;
#alias %432 %411;
#alias %433 %412;
#refsquare %434 %431;
#refsquare %435 %432;
#refsquare %436 %433;
#square %437 %410;
#square %438 %411;
#square %439 %412;
#filtersquare %156 %410;
#number %568 1;
#numeq %434 %568;
#filter %157 %436 %569;
#number %570 1;
#numeq %437 %570;
#filter %158 %439 %571;
#bool %159 false;
#call:assign/i:number/F:boolean/L:boolean/R %156 %157 %159;
#alias %277 %245;
#alias %521 %473;
#alias %522 %474;
#alias %523 %475;
#copy %161 %277;
#copy %162 %245;
#nil %163;
#number %164 1;
#append %163 %164;
#number %165 2;
#append %163 %165;
#number %166 3;
#append %163 %166;
#star %167 %163;
#call:assign/i:vec(number)/L:vec(number)/R %161 %167;
#alias %279 %245;
#alias %524 %473;
#alias %525 %474;
#alias %526 %475;
#copy %169 %279;
#copy %170 %245;
#refsquare %171 %169;
#square %172 %170;
#filtersquare %173 %170;
#at %174 %170;
#copy %175 %172;
#number %176 1;
#call:gt:boolean/R:number/R:number/R %177 %175 %176;
#filter %178 %173 %177;
#filter %179 %172 %177;
#copy %180 %179;
#number %181 3;
#call:lt:boolean/R:number/R:number/R %182 %180 %181;
#filter %183 %178 %182;
#filter %184 %179 %182;
#number %185 5;
#call:assign/i:number/F:number/L:number/R %183 %171 %185;
