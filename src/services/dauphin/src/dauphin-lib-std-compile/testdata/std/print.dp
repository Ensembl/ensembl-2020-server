import "lib:std";
use "std";

import "lib:buildtime";
use "buildtime";

struct test3 {
    A: vec(vec(number)),
    B: vec(vec(number))
};

z := [[0,0],[1,2,3],[4,5,6],[7,8,9],[1]];

z[][$==0] := 1;
z[len($)==1] := [1,1];

x := test3 {
    A: z,
    B: []
};

y := test3 {
    A: [[7],[6],[5]],
    B: [[4]]
};

print(format([x,y]));

print(format([get_version(["buildtime","missing"][]),get_version(["std"][])]));

struct test {
    x: vec(boolean)
};

print(format([test { x: [false,true] },test { x: [true,false] }]));

enum test2 {
    A: vec(boolean),
    B: vec(vec(number)),
    C: boolean
};

print(format([test2:A [true,true], test2:B [[0],[1,2,3]], test2:C false, test2:A [false]]));

print(format([1,2,3][]));
print(format('4241030040'));