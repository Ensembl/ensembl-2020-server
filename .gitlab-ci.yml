# CI/CD Pipeline
# dev branch -> staging
# master branch -> internal
# master branch -> live

# Define stages for the CI/CD pipeline
stages:
  - build_flask
  - deploy

variables:
  CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}
  DOCKER_TLS_CERTDIR: ""

# Template to build to docker image
.build:
  stage: build_flask
  image: docker
  services:
    - docker:dind

  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

  script:
  - docker build -t ${CONTAINER_IMAGE} --no-cache .
  - docker push ${CONTAINER_IMAGE}
  - docker rmi ${CONTAINER_IMAGE}
  - docker logout $CI_REGISTRY

# Template to deploy to WP k8s cluster
.deploy-wp:
  stage: deploy
  image: dockerhub.ebi.ac.uk/kamal/deploy-tools:0.1

  script:
  - git clone https://gitlab.ebi.ac.uk/kamal/ensembl-client-caas-deploy.git
  - git -C ensembl-client-caas-deploy/ checkout migration/wp-hx
  - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" ensembl-client-caas-deploy/ensembl_server_deployment.yaml
  - sed -i "s#<NFS_SERVER>#${NFS_SERVER}#g" ensembl-client-caas-deploy/ensembl_server_deployment.yaml
  - sed -i "s#<NFS_PATH>#${NFS_PATH}#g" ensembl-client-caas-deploy/ensembl_server_deployment.yaml
  - kubectl apply -f ensembl-client-caas-deploy/ensembl_server_deployment.yaml

# Template to deploy to EHK k8s cluster
.deploy-ehk:
  stage: deploy
  image: dockerhub.ebi.ac.uk/kamal/deploy-tools:0.1
  before_script:
    - mkdir -p /etc/deploy
    - export KUBECONFIG=/etc/deploy/config
    - echo ${EMBASSY_KUBECONFIG_DEV} | base64 -d > ${KUBECONFIG}
  script:
    - git clone https://gitlab.ebi.ac.uk/kamal/ensembl-client-caas-deploy.git
    - sed -i "s#<DOCKER_IMAGE>#${CONTAINER_IMAGE}#g" ensembl-client-caas-deploy/ensembl_server_deployment.yaml
    - sed -i "s#<DEPLOYMNET_ENV>#${DEPLOY_TAG}#g" ensembl-client-caas-deploy/ensembl_server_deployment.yaml
    - kubectl config use-context ${KUBE_CONTEXT}
    - kubectl apply -f ensembl-client-caas-deploy/ensembl_server_deployment.yaml

# Build docker image for live/internal/stage environment
Docker:IMG:
  extends: .build
  only:
  - dev
  - master

# Build docker image for feature_branch dev environment
Docker:feature:
  extends: .build
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_SLUG}

  only:
  - /^feature\/.*$/

# Deploy staging to EHK-HH cluster
Staging:EHK-HH:
  extends: .deploy-ehk
  variables:
    DEPLOY_TAG: staging
    KUBE_CONTEXT: ens-stage-ctx
  only:
  - dev

# Deploy staging to WP-HX cluster
Staging:WP-HX:
  extends: .deploy-wp
  variables:
    NFS_SERVER: hx-isi-srv-vlan157.ebi.ac.uk
    NFS_PATH: /ifs/public-r/ro/enswbsites
  environment:
    name : wp-hx-staging
  only:
  - dev

# Deploy staging to WP-HH cluster
Staging:WP-HH:
  extends: .deploy-wp
  variables:
    NFS_SERVER: hh-isi-srv-vlan1493.ebi.ac.uk
    NFS_PATH: /ifs/public/ro/enswbsites
  environment:
    name : wp-hh-staging
  only:
  - dev

# Deploy staging to WP-HX cluster
Live:WP-HX:
  extends: .deploy-wp
  variables:
    NFS_SERVER: hx-isi-srv-vlan157.ebi.ac.uk
    NFS_PATH: /ifs/public-r/ro/enswbsites
  environment:
    name : wp-hx-live
  only:
  - master

# Deploy staging to WP-HX cluster
Live:WP-HH:
  extends: .deploy-wp
  variables:
    NFS_SERVER: hx-isi-srv-vlan157.ebi.ac.uk
    NFS_PATH: /ifs/public-r/ro/enswbsites
  environment:
    name : wp-hh-live
  only:
  - master

# Deploy Live to EHK-HH cluster
Live:EHK-HH:
  extends: .deploy-ehk
  variables:
    DEPLOY_TAG: prod
    KUBE_CONTEXT: ens-prod-ctx
  only:
  - master

# Deploy internal to EHK-HH cluster
Internal:EHK-HH:
  extends: .deploy-ehk
  variables:
    DEPLOY_TAG: internal
    KUBE_CONTEXT: ens-dev-ctx
  only:
  - master

# Deploy feature to EHK-HH cluster
Feature:EHK-HH:
  extends: .deploy-ehk
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_REF_SLUG}
    DEPLOY_TAG: ${CI_COMMIT_REF_SLUG}
    KUBE_CONTEXT: ens-dev-ctx
  only:
  - /^feature\/.*$/