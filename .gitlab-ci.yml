# EMBASSY Working CI/CD with gitlab registry
stages:
  - build_flask
  - deploy

.build:
  stage: build_flask
  image: docker
  services:
    - docker:dind

  script:
  - docker build -t ${CONTAINER_IMAGE} --no-cache .
  - echo "$GITLAB_REGISTRY_TOKEN" | docker login -u "$GITLAB_REGISTRY_USER" --password-stdin https://"$GITLAB_REGISTRY_URL"
  - docker push ${CONTAINER_IMAGE}
  - docker rmi ${CONTAINER_IMAGE}
  - docker logout $GITLAB_REGISTRY_URL

.deploy:
  stage: deploy
  image: dockerhub.ebi.ac.uk/kamal/deploy-tools:0.1

  script:
  - git clone https://gitlab.ebi.ac.uk/kamal/ensembl-client-caas-deploy.git
  - git -C ensembl-client-caas-deploy/ checkout migration/wp-hx
  - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" ensembl-client-caas-deploy/ensembl_server_deployment.yaml
  - sed -i "s#<NFS_SERVER>#${NFS_SERVER}#g" ensembl-client-caas-deploy/ensembl_server_deployment.yaml
  - sed -i "s#<NFS_PATH>#${NFS_PATH}#g" ensembl-client-caas-deploy/ensembl_server_deployment.yaml
  - kubectl apply -f ensembl-client-caas-deploy/ensembl_server_deployment.yaml

variables:
  CONTAINER_IMAGE: $GITLAB_REGISTRY_URL/$GITLAB_REGISTRY_NAMESPACE/ensembl-2020-server:${CI_COMMIT_SHORT_SHA}
  DEPLOYENV: dev
  DOCKER_TLS_CERTDIR: ""

Docker:IMG:
  extends: .build
  only:
  - dev
  - master

Build e!-Server:feature:
  stage: build_flask

  image: docker

  services:
    - docker:dind

  script:
  - feature_branch=${CI_COMMIT_REF_NAME}
  - feature_tag=${feature_branch#"feature/"}
  - feature_tag=`echo "${feature_tag}" | tr '[A-Z]' '[a-z]'`
  - docker build -t ${CONTAINER_IMAGE}-$feature_tag --no-cache .
  - docker images
  - echo "$GITLAB_REGISTRY_TOKEN" | docker login -u "$GITLAB_REGISTRY_USER" --password-stdin https://"$GITLAB_REGISTRY_URL"
  - cat ~/.docker/config.json
  - docker push ${CONTAINER_IMAGE}-$feature_tag
  - docker rmi ${CONTAINER_IMAGE}-$feature_tag
  - docker logout $GITLAB_REGISTRY_URL

  only:
  - /^feature\/.*$/

# Deploy Stage 
Staging:
  stage: deploy
  image: alpine
  only:
  - dev
  before_script:
  - mkdir -p /etc/deploy
  - export KUBECONFIG=/etc/deploy/config
  - echo ${EMBASSY_KUBECONFIG_DEV} | base64 -d > ${KUBECONFIG}
  script:
  - apk update && apk add --no-cache curl git
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - mv ./kubectl /usr/local/bin/kubectl
  - git clone https://gitlab.ebi.ac.uk/kamal/ensembl-client-caas-deploy.git
  - cd ensembl-client-caas-deploy
  - git checkout refactor-manifest
  - cd ..
  - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" ensembl-client-caas-deploy/ensembl_server_deployment.yaml
  - sed -i "s/<DEPLOYMNET_ENV>/staging/g" ensembl-client-caas-deploy/ensembl_server_deployment.yaml
  - kubectl config view
  - kubectl config use-context ens-stage-ctx
  - kubectl apply -f ensembl-client-caas-deploy/ensembl_server_deployment.yaml

# Deploy staging to WP-HX cluster
Staging:WP-HX:
  extends: .deploy
  variables:
    NFS_SERVER: hx-isi-srv-vlan157.ebi.ac.uk
    NFS_PATH: /ifs/public-r/ro/enswbsites
  environment:
    name : wp-hx-staging
  only:
  - dev

# Deploy staging to WP-HH cluster
Staging:WP-HH:
  extends: .deploy
  variables:
    NFS_SERVER: hh-isi-srv-vlan1493.ebi.ac.uk
    NFS_PATH: /ifs/public/ro/enswbsites
  environment:
    name : wp-hh-staging
  only:
  - dev

# Deploy Live
Live:
  stage: deploy
  image: alpine
  only:
  - master
  before_script:
  - mkdir -p /etc/deploy
  - export KUBECONFIG=/etc/deploy/config
  - echo ${EMBASSY_KUBECONFIG_DEV} | base64 -d > ${KUBECONFIG}
  script:
  - apk update && apk add --no-cache curl git
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - mv ./kubectl /usr/local/bin/kubectl
  - git clone https://gitlab.ebi.ac.uk/kamal/ensembl-client-caas-deploy.git
  - cd ensembl-client-caas-deploy
  - git checkout refactor-manifest
  - cd ..
  - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" ensembl-client-caas-deploy/ensembl_server_deployment.yaml
  - sed -i "s/<DEPLOYMNET_ENV>/prod/g" ensembl-client-caas-deploy/ensembl_server_deployment.yaml
  - kubectl config view
  - kubectl config use-context ens-prod-ctx
  - kubectl apply -f ensembl-client-caas-deploy/ensembl_server_deployment.yaml

# Deploy Internal
Internal:
  stage: deploy
  image: alpine
  only:
  - master
  before_script:
  - mkdir -p /etc/deploy
  - export KUBECONFIG=/etc/deploy/config
  - echo ${EMBASSY_KUBECONFIG_DEV} | base64 -d > ${KUBECONFIG}
  script:
  - apk update && apk add --no-cache curl git
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - mv ./kubectl /usr/local/bin/kubectl
  - git clone https://gitlab.ebi.ac.uk/kamal/ensembl-client-caas-deploy.git
  - cd ensembl-client-caas-deploy
  - git checkout refactor-manifest
  - cd ..
  - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" ensembl-client-caas-deploy/ensembl_server_deployment.yaml
  - sed -i "s/<DEPLOYMNET_ENV>/internal/g" ensembl-client-caas-deploy/ensembl_server_deployment.yaml
  - kubectl config view
  - kubectl config use-context ens-dev-ctx
  - kubectl apply -f ensembl-client-caas-deploy/ensembl_server_deployment.yaml

Feature:
  stage: deploy
  image: alpine
  only:
  - /^feature\/.*$/
  before_script:
  - mkdir -p /etc/deploy
  - export KUBECONFIG=/etc/deploy/config
  - echo ${EMBASSY_KUBECONFIG_DEV} | base64 -d > ${KUBECONFIG}
  script:
  - apk update && apk add --no-cache curl git
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - mv ./kubectl /usr/local/bin/kubectl  
  - feature_branch=${CI_COMMIT_REF_NAME}
  - feature_tag=${feature_branch#"feature/"}
  - feature_tag=`echo "${feature_tag}" | tr '[A-Z]' '[a-z]'`
  - git clone https://gitlab.ebi.ac.uk/kamal/ensembl-client-caas-deploy.git
  - cd ensembl-client-caas-deploy
  - git checkout refactor-manifest
  - cd ..
  - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}-$feature_tag/g" ensembl-client-caas-deploy/ensembl_server_deployment.yaml
  - sed -i "s/<DEPLOYMNET_ENV>/$feature_tag/g" ensembl-client-caas-deploy/ensembl_server_deployment.yaml
  - kubectl config view
  - kubectl config use-context ens-dev-ctx
  - kubectl apply -f ensembl-client-caas-deploy/ensembl_server_deployment.yaml
